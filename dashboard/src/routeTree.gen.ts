/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as AuthImport } from './routes/_auth'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as DashboardUsersImport } from './routes/_dashboard/users'
import { Route as DashboardSettingsImport } from './routes/_dashboard/settings'
import { Route as DashboardServicesImport } from './routes/_dashboard/services'
import { Route as DashboardNodesImport } from './routes/_dashboard/nodes'
import { Route as DashboardHostsImport } from './routes/_dashboard/hosts'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as DashboardUsersCreateImport } from './routes/_dashboard/users/create'
import { Route as DashboardServicesCreateImport } from './routes/_dashboard/services/create'
import { Route as DashboardNodesCreateImport } from './routes/_dashboard/nodes/create'
import { Route as DashboardUsersUserIdIndexImport } from './routes/_dashboard/users/$userId/index'
import { Route as DashboardServicesServiceIdIndexImport } from './routes/_dashboard/services/$serviceId/index'
import { Route as DashboardNodesNodeIdIndexImport } from './routes/_dashboard/nodes/$nodeId/index'
import { Route as DashboardHostsHostIdIndexImport } from './routes/_dashboard/hosts/$hostId/index'
import { Route as DashboardUsersUserIdEditImport } from './routes/_dashboard/users/$userId/edit'
import { Route as DashboardUsersUserIdDeleteImport } from './routes/_dashboard/users/$userId/delete'
import { Route as DashboardServicesServiceIdEditImport } from './routes/_dashboard/services/$serviceId/edit'
import { Route as DashboardServicesServiceIdDeleteImport } from './routes/_dashboard/services/$serviceId/delete'
import { Route as DashboardNodesNodeIdEditImport } from './routes/_dashboard/nodes/$nodeId/edit'
import { Route as DashboardNodesNodeIdDeleteImport } from './routes/_dashboard/nodes/$nodeId/delete'
import { Route as DashboardHostsInboundIdCreateImport } from './routes/_dashboard/hosts/$inboundId/create'
import { Route as DashboardHostsHostIdEditImport } from './routes/_dashboard/hosts/$hostId/edit'
import { Route as DashboardHostsHostIdDeleteImport } from './routes/_dashboard/hosts/$hostId/delete'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardUsersRoute = DashboardUsersImport.update({
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardServicesRoute = DashboardServicesImport.update({
  path: '/services',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardNodesRoute = DashboardNodesImport.update({
  path: '/nodes',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardHostsRoute = DashboardHostsImport.update({
  path: '/hosts',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardUsersCreateRoute = DashboardUsersCreateImport.update({
  path: '/create',
  getParentRoute: () => DashboardUsersRoute,
} as any)

const DashboardServicesCreateRoute = DashboardServicesCreateImport.update({
  path: '/create',
  getParentRoute: () => DashboardServicesRoute,
} as any)

const DashboardNodesCreateRoute = DashboardNodesCreateImport.update({
  path: '/create',
  getParentRoute: () => DashboardNodesRoute,
} as any)

const DashboardUsersUserIdIndexRoute = DashboardUsersUserIdIndexImport.update({
  path: '/$userId/',
  getParentRoute: () => DashboardUsersRoute,
} as any)

const DashboardServicesServiceIdIndexRoute =
  DashboardServicesServiceIdIndexImport.update({
    path: '/$serviceId/',
    getParentRoute: () => DashboardServicesRoute,
  } as any)

const DashboardNodesNodeIdIndexRoute = DashboardNodesNodeIdIndexImport.update({
  path: '/$nodeId/',
  getParentRoute: () => DashboardNodesRoute,
} as any)

const DashboardHostsHostIdIndexRoute = DashboardHostsHostIdIndexImport.update({
  path: '/$hostId/',
  getParentRoute: () => DashboardHostsRoute,
} as any)

const DashboardUsersUserIdEditRoute = DashboardUsersUserIdEditImport.update({
  path: '/$userId/edit',
  getParentRoute: () => DashboardUsersRoute,
} as any)

const DashboardUsersUserIdDeleteRoute = DashboardUsersUserIdDeleteImport.update(
  {
    path: '/$userId/delete',
    getParentRoute: () => DashboardUsersRoute,
  } as any,
)

const DashboardServicesServiceIdEditRoute =
  DashboardServicesServiceIdEditImport.update({
    path: '/$serviceId/edit',
    getParentRoute: () => DashboardServicesRoute,
  } as any)

const DashboardServicesServiceIdDeleteRoute =
  DashboardServicesServiceIdDeleteImport.update({
    path: '/$serviceId/delete',
    getParentRoute: () => DashboardServicesRoute,
  } as any)

const DashboardNodesNodeIdEditRoute = DashboardNodesNodeIdEditImport.update({
  path: '/$nodeId/edit',
  getParentRoute: () => DashboardNodesRoute,
} as any)

const DashboardNodesNodeIdDeleteRoute = DashboardNodesNodeIdDeleteImport.update(
  {
    path: '/$nodeId/delete',
    getParentRoute: () => DashboardNodesRoute,
  } as any,
)

const DashboardHostsInboundIdCreateRoute =
  DashboardHostsInboundIdCreateImport.update({
    path: '/$inboundId/create',
    getParentRoute: () => DashboardHostsRoute,
  } as any)

const DashboardHostsHostIdEditRoute = DashboardHostsHostIdEditImport.update({
  path: '/$hostId/edit',
  getParentRoute: () => DashboardHostsRoute,
} as any)

const DashboardHostsHostIdDeleteRoute = DashboardHostsHostIdDeleteImport.update(
  {
    path: '/$hostId/delete',
    getParentRoute: () => DashboardHostsRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/hosts': {
      id: '/_dashboard/hosts'
      path: '/hosts'
      fullPath: '/hosts'
      preLoaderRoute: typeof DashboardHostsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/nodes': {
      id: '/_dashboard/nodes'
      path: '/nodes'
      fullPath: '/nodes'
      preLoaderRoute: typeof DashboardNodesImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/services': {
      id: '/_dashboard/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof DashboardServicesImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/settings': {
      id: '/_dashboard/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/users': {
      id: '/_dashboard/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof DashboardUsersImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/nodes/create': {
      id: '/_dashboard/nodes/create'
      path: '/create'
      fullPath: '/nodes/create'
      preLoaderRoute: typeof DashboardNodesCreateImport
      parentRoute: typeof DashboardNodesImport
    }
    '/_dashboard/services/create': {
      id: '/_dashboard/services/create'
      path: '/create'
      fullPath: '/services/create'
      preLoaderRoute: typeof DashboardServicesCreateImport
      parentRoute: typeof DashboardServicesImport
    }
    '/_dashboard/users/create': {
      id: '/_dashboard/users/create'
      path: '/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof DashboardUsersCreateImport
      parentRoute: typeof DashboardUsersImport
    }
    '/_dashboard/hosts/$hostId/delete': {
      id: '/_dashboard/hosts/$hostId/delete'
      path: '/$hostId/delete'
      fullPath: '/hosts/$hostId/delete'
      preLoaderRoute: typeof DashboardHostsHostIdDeleteImport
      parentRoute: typeof DashboardHostsImport
    }
    '/_dashboard/hosts/$hostId/edit': {
      id: '/_dashboard/hosts/$hostId/edit'
      path: '/$hostId/edit'
      fullPath: '/hosts/$hostId/edit'
      preLoaderRoute: typeof DashboardHostsHostIdEditImport
      parentRoute: typeof DashboardHostsImport
    }
    '/_dashboard/hosts/$inboundId/create': {
      id: '/_dashboard/hosts/$inboundId/create'
      path: '/$inboundId/create'
      fullPath: '/hosts/$inboundId/create'
      preLoaderRoute: typeof DashboardHostsInboundIdCreateImport
      parentRoute: typeof DashboardHostsImport
    }
    '/_dashboard/nodes/$nodeId/delete': {
      id: '/_dashboard/nodes/$nodeId/delete'
      path: '/$nodeId/delete'
      fullPath: '/nodes/$nodeId/delete'
      preLoaderRoute: typeof DashboardNodesNodeIdDeleteImport
      parentRoute: typeof DashboardNodesImport
    }
    '/_dashboard/nodes/$nodeId/edit': {
      id: '/_dashboard/nodes/$nodeId/edit'
      path: '/$nodeId/edit'
      fullPath: '/nodes/$nodeId/edit'
      preLoaderRoute: typeof DashboardNodesNodeIdEditImport
      parentRoute: typeof DashboardNodesImport
    }
    '/_dashboard/services/$serviceId/delete': {
      id: '/_dashboard/services/$serviceId/delete'
      path: '/$serviceId/delete'
      fullPath: '/services/$serviceId/delete'
      preLoaderRoute: typeof DashboardServicesServiceIdDeleteImport
      parentRoute: typeof DashboardServicesImport
    }
    '/_dashboard/services/$serviceId/edit': {
      id: '/_dashboard/services/$serviceId/edit'
      path: '/$serviceId/edit'
      fullPath: '/services/$serviceId/edit'
      preLoaderRoute: typeof DashboardServicesServiceIdEditImport
      parentRoute: typeof DashboardServicesImport
    }
    '/_dashboard/users/$userId/delete': {
      id: '/_dashboard/users/$userId/delete'
      path: '/$userId/delete'
      fullPath: '/users/$userId/delete'
      preLoaderRoute: typeof DashboardUsersUserIdDeleteImport
      parentRoute: typeof DashboardUsersImport
    }
    '/_dashboard/users/$userId/edit': {
      id: '/_dashboard/users/$userId/edit'
      path: '/$userId/edit'
      fullPath: '/users/$userId/edit'
      preLoaderRoute: typeof DashboardUsersUserIdEditImport
      parentRoute: typeof DashboardUsersImport
    }
    '/_dashboard/hosts/$hostId/': {
      id: '/_dashboard/hosts/$hostId/'
      path: '/$hostId'
      fullPath: '/hosts/$hostId'
      preLoaderRoute: typeof DashboardHostsHostIdIndexImport
      parentRoute: typeof DashboardHostsImport
    }
    '/_dashboard/nodes/$nodeId/': {
      id: '/_dashboard/nodes/$nodeId/'
      path: '/$nodeId'
      fullPath: '/nodes/$nodeId'
      preLoaderRoute: typeof DashboardNodesNodeIdIndexImport
      parentRoute: typeof DashboardNodesImport
    }
    '/_dashboard/services/$serviceId/': {
      id: '/_dashboard/services/$serviceId/'
      path: '/$serviceId'
      fullPath: '/services/$serviceId'
      preLoaderRoute: typeof DashboardServicesServiceIdIndexImport
      parentRoute: typeof DashboardServicesImport
    }
    '/_dashboard/users/$userId/': {
      id: '/_dashboard/users/$userId/'
      path: '/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof DashboardUsersUserIdIndexImport
      parentRoute: typeof DashboardUsersImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({ AuthLoginRoute }),
  DashboardRoute: DashboardRoute.addChildren({
    DashboardHostsRoute: DashboardHostsRoute.addChildren({
      DashboardHostsHostIdDeleteRoute,
      DashboardHostsHostIdEditRoute,
      DashboardHostsInboundIdCreateRoute,
      DashboardHostsHostIdIndexRoute,
    }),
    DashboardNodesRoute: DashboardNodesRoute.addChildren({
      DashboardNodesCreateRoute,
      DashboardNodesNodeIdDeleteRoute,
      DashboardNodesNodeIdEditRoute,
      DashboardNodesNodeIdIndexRoute,
    }),
    DashboardServicesRoute: DashboardServicesRoute.addChildren({
      DashboardServicesCreateRoute,
      DashboardServicesServiceIdDeleteRoute,
      DashboardServicesServiceIdEditRoute,
      DashboardServicesServiceIdIndexRoute,
    }),
    DashboardSettingsRoute,
    DashboardUsersRoute: DashboardUsersRoute.addChildren({
      DashboardUsersCreateRoute,
      DashboardUsersUserIdDeleteRoute,
      DashboardUsersUserIdEditRoute,
      DashboardUsersUserIdIndexRoute,
    }),
    DashboardIndexRoute,
  }),
})

/* prettier-ignore-end */
